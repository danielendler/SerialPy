name: 🧪 CI (Simplified)

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs.yml'
      - '.readthedocs.yaml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs.yml'
      - '.readthedocs.yaml'

jobs:
  # Single Python version testing for now
  test:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 💾 Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: 🧪 Run core tests
      run: |
        pytest tests/test_core.py tests/test_converters.py tests/test_deserializers.py -v --cov=serialpy --cov-report=xml --cov-report=term-missing

    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        flags: tests
        name: ubuntu-py3.11

    - name: 🔒 Security scan
      run: |
        bandit -r serialpy/ -f json -o bandit-report.json || true

    - name: 📤 Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: bandit-report.json

  # Build package
  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 💾 Cache pip dependencies (build)
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-build-pip-
          ${{ runner.os }}-pip-

    - name: 📦 Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 🏗️ Build package
      run: |
        python -m build

    - name: ✅ Check package
      run: |
        twine check dist/*

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
