name: 🤖 Auto-merge

on:
  pull_request:
    types: [labeled, unlabeled, synchronize, opened, edited, ready_for_review, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    # Only run on PRs that are not drafts
    if: github.event.pull_request != null && github.event.pull_request.draft == false

    steps:
    - name: 🤖 Auto-merge Dependabot PRs
      uses: fastify/github-action-merge-dependabot@v3.10.1
      if: |
        github.actor == 'dependabot[bot]' &&
        (
          contains(github.event.pull_request.title, 'Bump') ||
          contains(github.event.pull_request.title, 'Update')
        )
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        target: minor
        merge-method: squash

    - name: 🤖 Auto-merge labeled PRs
      if: contains(github.event.pull_request.labels.*.name, 'auto-merge')
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Wait for checks to complete
        echo "⏳ Waiting for checks to complete..."
        gh pr checks ${{ github.event.pull_request.number }} --watch --interval 30

        # Check if all required checks passed
        if gh pr checks ${{ github.event.pull_request.number }} --required; then
          echo "✅ All checks passed. Auto-merging..."
          gh pr merge ${{ github.event.pull_request.number }} --squash --auto
        else
          echo "❌ Some checks failed. Skipping auto-merge."
        fi

  auto-approve:
    runs-on: ubuntu-latest

    # Only run for Dependabot PRs
    if: github.actor == 'dependabot[bot]'

    steps:
    - name: 🤖 Auto-approve Dependabot PRs
      uses: hmarr/auto-approve-action@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🏷️ Label Dependabot PRs
      uses: actions/github-script@v7
      with:
        script: |
          const prTitle = context.payload.pull_request.title.toLowerCase();
          const labels = [];

          // Categorize Dependabot PRs
          if (prTitle.includes('pytest') || prTitle.includes('ruff') || prTitle.includes('mypy') || prTitle.includes('bandit')) {
            labels.push('dependencies:dev');
          } else if (prTitle.includes('pandas') || prTitle.includes('numpy') || prTitle.includes('torch') || prTitle.includes('tensorflow')) {
            labels.push('dependencies:optional');
          } else if (prTitle.includes('actions/') || prTitle.includes('github')) {
            labels.push('dependencies:github-actions');
          } else {
            labels.push('dependencies:core');
          }

          // Add auto-merge label for safe updates
          if (prTitle.includes('patch') || prTitle.includes('minor') || labels.includes('dependencies:dev') || labels.includes('dependencies:github-actions')) {
            labels.push('auto-merge');
          }

          // Apply labels
          if (labels.length > 0) {
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: labels
            });
          }
